<?php

namespace Tests\Feature;

use App\Models\CategoriaDiario;
use App\Models\TipoLectura;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class TipoLecturaModuleTest extends TestCase
{
     // para que se borre la base de datos antes de cada test
     use RefreshDatabase;

     private $usuario;
     private $tipo_lectura;
     private $categorias;
     public function setUp(): void
     {
         parent::setUp(); // TODO: Change the autogenerated stub

         $this->usuario = User::factory()->create();
        
         $this->categorias = CategoriaDiario::factory()->create();

         $this->tipo_lectura = TipoLectura::factory([
             'id'=>1,
             'nombre'=>'Prueba',
             'categoria_diario_id'=> $this->categorias->id,
             'created_at'=>now(),
             'updated_at'=>now(),
         ])->create();
 
         Sanctum::actingAs(
             $this->usuario,
             ['*']
         );
     }
     /**
      * A basic feature test example.
      *
      * @return void
      */
     public function test_tipos_lecturas_status()
     {
         $this->withoutExceptionHandling();
         $response = $this->get(route('tipos-lecturas.index'));
         $response->assertStatus(200);
     }
 
     public function test_edit_tipos_lecturas()
     {
         $this->withoutExceptionHandling();
         $response = $this->get(route('tipos-lecturas.edit', 1));
         $response->assertStatus(200);
     }
 
     public function test_list_tipos_lecturas()
     {
 
         $this->withoutExceptionHandling();
 
         $response = $this->get(route('tipos-lecturas.index'));
 
         $response->assertStatus(200);
 
         $response->assertViewIs('livewire.admin.tipos-lecturas.tipos-lecturas');
     }
 
     public function test_post_tipos_lecturas()
     {
         $this->WithoutMiddleware();

         $this->withoutExceptionHandling();

         $response = $this->post(route('tipos-lecturas.store'), [
             'nombre' => 'Test tipo lectura',
             'categoria_diario_id' => $this->categorias->id,
             'create_at' => now(),
             'update_at' => now(),
         ]);
         
         $response->assertStatus(302);
 
       
         $this->assertCount(2, TipoLectura::all());
 
         $tipo_lectura = TipoLectura::all()->last();
 
         $this->assertEquals($tipo_lectura->nombre, 'Test tipo lectura');
     }
 
     public function test_update_tipos_lecturas()
     {

        $this->WithoutMiddleware();

        $this->withoutExceptionHandling();

         $response = $this->put(route('tipos-lecturas.update', $this->tipo_lectura), [

            'nombre' => 'Test nombre',
            'categoria_diario_id' => $this->categorias->id,
            'create_at' => now(),
            'update_at' => now(),
         ]);
 
         $response->assertStatus(302);
 
         $this->assertCount(2, TipoLectura::all());
         
         $tipo_lectura = TipoLectura::find(1);
 
         $this->assertEquals($tipo_lectura->nombre, 'Prueba');
     }
 
     public function test_delete_tipos_lecturas()
     {
        $this->WithoutMiddleware();

         $response = $this->delete(route('tipos-lecturas.delete', $this->tipo_lectura->id));
 
         $response->assertStatus(302);
 
         $this->assertCount(0, TipoLectura::all());
     }
}
