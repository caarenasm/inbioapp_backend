<?php

namespace Tests\Feature;

use App\Models\Plan;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;


class PlanModuleTest extends TestCase
{
    use RefreshDatabase;

    private $usuario;
    private $planes;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->usuario = User::factory()->create();


        
        $this->planes = Plan::factory([
            'id'=>1,
            'titulo'=>'Prueba',
            'slug'=>'prueba',
            'descripcion'=>'Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam, impedit dolorum perspiciatis error incidunt tempora ducimus dicta natus! Delectus temporibus ipsum perspiciatis excepturi fuga omnis id animi voluptate cumque commodi!',
            'imagen_url'=>'logo.png',
            'precio'=>'30.0000',
            'created_at'=>now(),
            'updated_at'=>now(),
        ])->create();

        Sanctum::actingAs(
            $this->usuario,
            ['*']
        );
    }
    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_plan_status()
    {
        $response = $this->get(route('planes'));

        $response->assertStatus(200);
    }

    public function test_create_planes()
    {
        $this->withoutExceptionHandling();
        $response = $this->get(route('planes.create'));
        $response->assertStatus(200);
    }

    public function test_edit_planes()
    {
        $this->withoutExceptionHandling();
        $response = $this->get(route('planes.edit', 1));
        $response->assertStatus(200);
    }

    public function test_list_planes()
    {

        $this->withoutExceptionHandling();

        $response = $this->get(route('planes'));

        $response->assertStatus(200);

        $response->assertViewIs('livewire.admin.planes.planes');
    }


    public function test_post_planes()
    {
        $this->WithoutMiddleware();
        $this->withoutExceptionHandling();

        $response = $this->post(route('planes.store'), [
            'titulo'=>'Test planes',
            'slug'=>'test-planes',
            'descripcion'=>'Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam, impedit dolorum perspiciatis error incidunt tempora ducimus dicta natus! Delectus temporibus ipsum perspiciatis excepturi fuga omnis id animi voluptate cumque commodi!',
            'imagen_url'=>'logo.png',
            'precio'=>'30.0000',
            'created_at'=>now(),
            'updated_at'=>now(),
        ]);

        $response->assertStatus(302);

        
        $this->assertCount(2, Plan::all());

        $plan = Plan::all()->last();

        $this->assertEquals($plan->titulo, 'Test planes');
    }

    public function test_update_planes()
    {

        $response = $this->put(route('planes.update', $this->planes), [
            'titulo' => 'Test plan',
            'slug'=>'test-planes',
            'descripcion'=>'Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam, impedit dolorum perspiciatis error incidunt tempora ducimus dicta natus! Delectus temporibus ipsum perspiciatis excepturi fuga omnis id animi voluptate cumque commodi!',
            'imagen_url'=>'logo.png',
            'precio'=>'30.0000',
        ]);

        $response->assertStatus(302);

       
        $this->assertCount(1, Plan::all());

        
        $plan = Plan::find(1);

        $this->assertEquals($plan->titulo, 'Test plan');
    }

    public function test_delete_planes()
    {

        $response = $this->delete(route('planes.delete', $this->planes->id));

        $response->assertStatus(302);

        $this->assertCount(0, Plan::all());
    }
}
